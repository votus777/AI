
app = Flask(__name__)
application으로 시작되는지 혹은 module로 시작되는지에 따라서 name이 결정된다, 여기서는 후자


Reqeust  (요청)
클라이언트에 서버로 어떤 요청을 보낼지 정함
'어떠한 정보를 달라' - Get요청, Post 요청 
ip, url, 파라미터 관련 정보 등등 요청 가능 

Response (응답)
어떠한 정보를 어떻게 처리한 후 응답할지 

json, Cookie, history, text 등등 많은 형태가 있다 

클라이언트와 서버는 이런 요청-응답 관계로 이어지는데 
문제는 이런 정보는 서버와의 연결이 끊어지는 순간 모두 증발한다는 점이다. 
그래서 이를 보완하기 위해 Cookie와 Session을 이용한다

Cookie 
Response 객체의 set_cookie 메소드로 사용할 수 있음 
key - value로 표현 
기억을 되살려 주는 것이기 때문에 당연히 꼬리가 아니라 머리(Header)에 들어간다 
웹 브라우저에 저장 , 도메인당 20개, 쿠키1개당 4kb, 총 300개


Session 
클라이언트(웹 브라우저)가 서버에 접속할 때, 서버에게 부여받는 ID 값  
Session ID 는 Cookie에 의해 생성, 즉 서버는 해당 클라이언트를 구분 가능
웹 서버 메모리에 저장, 용량 제한 없음 
그래서 브라우저가 닫히면 세션도 만료 됨 
(인터넷 연결 끊기고 한참 있다 다시 들어가면 세션 만료 되었다 뜨는거)
 

